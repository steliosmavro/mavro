{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(chmod:*)",
      "Bash(npm:*)",
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(npm install:*)",
      "Bash(npm ls:*)",
      "Bash(npm outdated)",
      "Bash(npm update)",
      "Bash(npm uninstall:*)",
      "Bash(npx:*)",
      "Bash(npx prettier:*)",
      "Bash(node:*)",
      "Bash(turbo:*)",
      "Bash(turbo run build:*)",
      "Bash(ps:*)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(env:*)",
      "Bash(env)",
      "Bash(echo:*)",
      "Bash(which:*)",
      "Bash(pwd)",
      "Bash(cd:*)",
      "Bash(ulimit:*)",
      "Bash(prettier:*)",
      "Bash(eslint:*)",
      "Bash(tsc:*)",
      "Bash(file:*)",
      "Bash(xxd:*)",
      "Bash(hexdump:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(tar:*)",
      "Bash(curl:*)",
      "Bash(netstat:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(git checkout:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:turbo.build)",
      "WebFetch(domain:turborepo.com)",
      "Bash(open:*)",
      "WebFetch(domain:react-pdf.org)",
      "Bash(git add:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-updated-resume.tsx)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-title-format-pdfs.tsx)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-final-resume.tsx)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-blue-title-resume.tsx)",
      "Bash(for i in {1..7})",
      "Bash(do echo \"Generating PDF $i...\")",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-lines-test-$i.tsx)",
      "Bash(done)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-compact-resume.tsx)",
      "Bash(do cp /Users/stylianosmavrokoukoulakis/Development/mavro/apps/mavrodev/scripts/generate-compact-resume.tsx /Users/stylianosmavrokoukoulakis/Development/mavro/apps/mavrodev/scripts/generate-lines-test-$i-compact.tsx)",
      "Bash(do echo \"Generating compact PDF $i...\")",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-lines-test-$i-compact.tsx)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-resume.tsx)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-resume-date-left.tsx)",
      "Bash(for:*)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx \"$script\")",
      "Bash(do if [[ ! \"$file\" =~ \"small-gap\" ]])",
      "Bash(then sed -i '' 's/gap: 12,/gap: 6,/' \"$file\")",
      "Bash(fi)",
      "Bash(do newfile=\"$file/date-left/date-right\")",
      "Bash(sed:*)",
      "Bash(python3:*)",
      "Bash(do if ! grep -q \"experienceTitleRow:\" \"$file\")",
      "Bash(then sed -i '' '/experienceHeader: {/a\\\n\\    experienceTitleRow: {\\\n\\        flexDirection: ''''row'''',\\\n\\        alignItems: ''''flex-start'''',\\\n\\        gap: 8,\\\n\\    },' \"$file\")",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-resume-date-left-inline.tsx)",
      "Bash(NODE_OPTIONS=\"--max-old-space-size=8192\" npx tsx scripts/generate-resume-date-above.tsx)",
      "Bash(git reset:*)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(reboot)",
      "Bash(shutdown)",
      "Bash(nc:*)",
      "Bash(nmap:*)"
    ]
  }
}